from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder

main_keyboard = ReplyKeyboardMarkup(
  keyboard=[
    [KeyboardButton(text="‚è≠Ô∏è –°–ª–µ–¥. –Ω–µ–¥–µ–ª—è"), KeyboardButton(text="–¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è ‚¨ÖÔ∏è")],
    [KeyboardButton(text="‚è≠Ô∏è –ó–∞–≤—Ç—Ä–∞"), KeyboardButton(text="–°–µ–≥–æ–¥–Ω—è ‚¨ÖÔ∏è")],
    [KeyboardButton(text="üìã –ò–∑–º–µ–Ω–µ–Ω–∏—è"), KeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ üîß")],
    [KeyboardButton(text="‚ùî–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥—Ä—É–≥–æ–π –≥—Ä—É–ø–ø—ã‚ùî")],
  ],
  resize_keyboard=True,
  input_field_placeholder="–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å?"
)

ask_changes_keyboard = InlineKeyboardMarkup(
  inline_keyboard=[
    [
      InlineKeyboardButton(text="–î–∞", callback_data="show_changes"),
      InlineKeyboardButton(text="–ù–µ—Ç", callback_data="dont-show_changes"),
    ],
  ],
)

other_group_when = InlineKeyboardMarkup(
  inline_keyboard=[
    [InlineKeyboardButton(text="‚è≠Ô∏è –°–ª–µ–¥—É—é—â–∞—è", callback_data="next-week_other_group"), InlineKeyboardButton(text="–¢–µ–∫—É—â–∞—è ‚¨ÖÔ∏è", callback_data="current-week_other_group")],
  ]
)

empty_inline = InlineKeyboardMarkup(inline_keyboard=[])

async def get_settings_keyboard(user: dict):
  def get_emoji_by_bool(var: bool):
    return "‚úÖ" if var else "‚ùå"

  def get_callback_by_bool(var: bool):
    return "enable_" if var else "disable_"

  settings_postfix = "_setting"

  settings = [
    {"key": "send_timetable_new_week", "label": "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å –Ω–æ–≤–æ–π –Ω–µ–¥–µ–ª–∏"},
    {"key": "send_changes_updated", "label": "–ù–æ–≤—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è"},
    {"key": "send_changes_when_isnt_group", "label": "–ò–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–≥–¥–∞ –≥—Ä—É–ø–ø—ã –Ω–µ—Ç"}
  ]

  kb = InlineKeyboardBuilder()

  kb.add(InlineKeyboardButton(text="üîÑÔ∏è –°–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É", callback_data="change-group"))

  for setting in settings:
    key = setting["key"]
    label = setting["label"]
    value = user["settings"].get(key, False)  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é False, –µ—Å–ª–∏ –Ω–µ—Ç –∫–ª—é—á–∞
    kb.add(InlineKeyboardButton(
      text=f"{get_emoji_by_bool(value)} {label}",
      callback_data=f"{get_callback_by_bool(value)}{key}{settings_postfix}"
    ))

  kb.add(InlineKeyboardButton(text="¬´ –ù–∞–∑–∞–¥", callback_data="back-settings"))
  return kb.adjust(1).as_markup()
